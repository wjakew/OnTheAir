/*
by Jakub Wawak
kubawawak@gmail.com
all rights reserved
 */
package com.jakubwawak.gui;

import com.jakubwawak.ontheair.Database;
import java.awt.Color;
import java.sql.SQLException;

/**
 *Object for creating database connection and data insert
 * @author jakubwawak
 */
public class database_window extends javax.swing.JDialog {

    /**
     * Creates new form database_window
     */
    Database database;
    
    /**
     * Constructor
     * @param parent
     * @param modal
     * @param database 
     */
    public database_window(javax.swing.JDialog parent, boolean modal,Database database) {
        super(parent, modal);
        this.database = database;
        this.setUndecorated(true);
        initComponents();
        load_window();
        getContentPane().setBackground(Color.DARK_GRAY);
        this.setLocationRelativeTo(parent);
        setVisible(true);
    }

    /**
     * Function for loading components of the window
     */
    void load_window(){
        if ( database.connected ){
            field_ip.setText(database.ip);
            field_ip.setEnabled(false);
            field_databasename.setText(database.database_name);
            field_databasename.setEnabled(false);
            field_databaseuser.setText(database.database_user);
            field_databaseuser.setEnabled(false);
            field_password.setText(database.database_password);
            field_password.setEnabled(false);
            label_connect.setText("Connected");
            label_connect.setEnabled(false);
        }
        else{
            field_password.setText("password");
        }
    }
    
    /**
     * Function for validating password
     * @return boolean
     */
    boolean validate_password(){
        return !String.valueOf(field_password.getPassword()).equals("")
                &&!String.valueOf(field_password.getPassword()).equals("password")
                &&String.valueOf(field_password.getPassword()).length() < 30;
    }
    
    /**
     * Function for field validation
     * @return boolean
     */
    boolean validate_fields(){
        return !field_ip.equals("ip") && field_ip.equals("") 
                && !field_databasename.getText().equals("")&&!field_databasename.getText().equals("database name")
                &&!field_databaseuser.getText().equals("")&&!field_databaseuser.getText().equals("database user");
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        field_databasename = new javax.swing.JTextField();
        field_databaseuser = new javax.swing.JTextField();
        field_ip = new javax.swing.JTextField();
        label_cancel = new javax.swing.JLabel();
        label_connect = new javax.swing.JLabel();
        field_password = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        field_databasename.setBackground(java.awt.Color.darkGray);
        field_databasename.setForeground(new java.awt.Color(255, 255, 255));
        field_databasename.setText("database name");

        field_databaseuser.setBackground(java.awt.Color.darkGray);
        field_databaseuser.setForeground(new java.awt.Color(255, 255, 255));
        field_databaseuser.setText("database user");

        field_ip.setBackground(java.awt.Color.darkGray);
        field_ip.setForeground(new java.awt.Color(255, 255, 255));
        field_ip.setText("ip");

        label_cancel.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        label_cancel.setForeground(new java.awt.Color(255, 255, 255));
        label_cancel.setText("Cancel");
        label_cancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                label_cancelMouseClicked(evt);
            }
        });

        label_connect.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        label_connect.setForeground(new java.awt.Color(255, 255, 255));
        label_connect.setText("Connect...");
        label_connect.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                label_connectMouseClicked(evt);
            }
        });

        field_password.setBackground(java.awt.Color.darkGray);
        field_password.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        field_password.setForeground(new java.awt.Color(255, 255, 255));
        field_password.setText("jPasswordField1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(field_password)
                    .addComponent(field_databasename)
                    .addComponent(field_databaseuser, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
                    .addComponent(field_ip, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(label_connect)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(label_cancel)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(field_ip, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(field_databasename, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(field_databaseuser, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(field_password, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_cancel)
                    .addComponent(label_connect))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void label_cancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label_cancelMouseClicked
        dispose();
    }//GEN-LAST:event_label_cancelMouseClicked

    private void label_connectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label_connectMouseClicked
        if ( validate_fields() ){
            if ( validate_password() ){
                try{
                    database.connect(field_ip.getText(),field_databasename.getText(),
                            field_databaseuser.getText(),String.valueOf(field_password.getPassword()));
                    if ( database.connected ){
                        label_connect.setText("Connected");
                        field_ip.setEnabled(false);
                        field_databasename.setEnabled(false);
                        field_databaseuser.setEnabled(false);
                        field_password.setEnabled(false);
                        label_connect.setEnabled(false);
                        label_cancel.setText("Close");
                    }
                } catch (SQLException ex) {
                    label_connect.setText("Error");
                    field_ip.setEnabled(false);
                    field_databasename.setEnabled(false);
                    field_databaseuser.setEnabled(false);
                    field_password.setEnabled(false);
                    label_connect.setEnabled(false);
                    label_cancel.setText("Close");
                }
            }
            else{
                field_ip.setText("Wrong ip");
            }
        }
        else{
            field_ip.setText("Wrong data");
        }
    }//GEN-LAST:event_label_connectMouseClicked



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField field_databasename;
    private javax.swing.JTextField field_databaseuser;
    private javax.swing.JTextField field_ip;
    private javax.swing.JPasswordField field_password;
    private javax.swing.JLabel label_cancel;
    private javax.swing.JLabel label_connect;
    // End of variables declaration//GEN-END:variables
}
