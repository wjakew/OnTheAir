/*
by Jakub Wawak
kubawawak@gmail.com
all rights reserved
 */
package com.jakubwawak.gui;

import com.jakubwawak.radioplayer.Boombox;
import com.jakubwawak.radioplayer.RadioPlayer;
import com.jakubwawak.radioplayer.RadioStation;
import java.awt.Color;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.Rectangle;
import java.io.IOException;
import java.sql.SQLException;
import javax.swing.JLabel;

/**
 *Main window object
 * @author jakubwawak
 */
public class main_window extends javax.swing.JFrame {

    /**
     * Creates new form main_window
     */
    String version ;
    final String BGC_SRC = "bcg.jpg";
    Boombox boombox;
    RadioPlayer player;
    
    /**
     * Main constructors
     * @param version
     * @throws IOException 
     */
    public main_window(String version) throws IOException {
        boombox = new Boombox();
        this.version = version;
        //this.setUndecorated(true);
        initComponents();
        load_window();
        getContentPane().setBackground(Color.BLACK);
        this.setLocationRelativeTo(null);
        locate_window();
        setVisible(true);
    }
    
    /**
     * Function for loading default window content
     */
    void load_window(){
        label_error.setVisible(false);
        label_radiostationname.setHorizontalAlignment(JLabel.CENTER);
        label_radiostationname.setVerticalAlignment(JLabel.CENTER);
        label_version.setVisible(true);
        label_version.setText(version);
        load_default_presets();
    }
    
    /**
     * Function for locating window on screen
     */
    void locate_window(){
            GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
            GraphicsDevice defaultScreen = ge.getDefaultScreenDevice();
            Rectangle rect = defaultScreen.getDefaultConfiguration().getBounds();
            int x = (int) rect.getMaxX() - this.getWidth();
            int y = 23;
            this.setLocation(x, y);
            this.setVisible(true);
    }
    
    /**
     * Function for loading data to ComboBox model
     */
    void load_default_presets(){
        label_radiostationname.setText(boombox.list_of_names().get(0));
    }
    
    /**
     * Function for getting selected RadioStation
     * @return RadioStation
     */
    RadioStation get_selected_station(){
        System.out.println("Selected radio: "+label_radiostationname.getText());
        return boombox.get_radio(label_radiostationname.getText());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label_version = new javax.swing.JLabel();
        label_radiostationname = new javax.swing.JLabel();
        label_play = new javax.swing.JLabel();
        label_iotions = new javax.swing.JLabel();
        label_error = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("OnTheAir");

        label_version.setFont(new java.awt.Font("Calisto MT", 0, 13)); // NOI18N
        label_version.setForeground(new java.awt.Color(255, 255, 255));
        label_version.setText("v.1.0.0");
        label_version.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                label_versionMouseClicked(evt);
            }
        });

        label_radiostationname.setFont(new java.awt.Font("Elephant", 0, 36)); // NOI18N
        label_radiostationname.setForeground(new java.awt.Color(255, 255, 255));
        label_radiostationname.setText("RadioStation Name");
        label_radiostationname.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                label_radiostationnameMouseClicked(evt);
            }
        });

        label_play.setFont(new java.awt.Font("Calisto MT", 0, 36)); // NOI18N
        label_play.setForeground(new java.awt.Color(255, 255, 255));
        label_play.setText("Play");
        label_play.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                label_playMouseClicked(evt);
            }
        });

        label_iotions.setFont(new java.awt.Font("Calisto MT", 0, 18)); // NOI18N
        label_iotions.setForeground(new java.awt.Color(255, 255, 255));
        label_iotions.setText("Options");
        label_iotions.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                label_iotionsMouseClicked(evt);
            }
        });

        label_error.setFont(new java.awt.Font("Calisto MT", 0, 13)); // NOI18N
        label_error.setForeground(new java.awt.Color(255, 255, 255));
        label_error.setText("Player faliure");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(label_iotions)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(label_error))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(label_radiostationname)
                        .addGap(0, 56, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(label_version)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(label_play, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_iotions)
                    .addComponent(label_error))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 115, Short.MAX_VALUE)
                .addComponent(label_radiostationname)
                .addGap(94, 94, 94)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_version)
                    .addComponent(label_play))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void label_playMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label_playMouseClicked
        String state = label_play.getText();
        label_error.setVisible(false);
        RadioStation selected_radio = get_selected_station();
        switch(state){
            case "Play":
                try{
                    player = new RadioPlayer(selected_radio);
                    Thread player_thread = new Thread(player);
                    player_thread.start();
                    label_play.setText("Stop");
                    label_play.setVerticalAlignment(JLabel.CENTER);
                }catch(Exception e){
                    label_error.setVisible(true);
                }
                
                break;
            case "Stop":
                player.stop();
                player = null;
                label_play.setText("Play");
                break;
            default:
                System.out.println("Błąd");
                break;
        }
    }//GEN-LAST:event_label_playMouseClicked

    private void label_radiostationnameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label_radiostationnameMouseClicked
        if ( player != null){
            player.stop();
            label_play.setText("Play");
        }
        System.out.println("Radiostation change invoked");
        new radiostation_picker_window(this,true,boombox);
        if ( !boombox.picked.equals("") ){
            label_radiostationname.setText(boombox.picked);
            label_radiostationname.setVerticalAlignment(JLabel.CENTER);
        }
        
    }//GEN-LAST:event_label_radiostationnameMouseClicked

    private void label_iotionsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label_iotionsMouseClicked
        System.out.println("Account settings invoked");
        try {
            new myaccount_window(this,true,boombox,version);
        } catch (SQLException ex) {
            System.out.println("Database error: "+ex.toString());
        } catch (ClassNotFoundException ex) {
            System.out.println("Java error: "+ex.toString());
        }
    }//GEN-LAST:event_label_iotionsMouseClicked

    private void label_versionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label_versionMouseClicked
        this.setUndecorated(false);
        this.validate();
        this.repaint();
    }//GEN-LAST:event_label_versionMouseClicked

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel label_error;
    private javax.swing.JLabel label_iotions;
    private javax.swing.JLabel label_play;
    private javax.swing.JLabel label_radiostationname;
    private javax.swing.JLabel label_version;
    // End of variables declaration//GEN-END:variables
}
